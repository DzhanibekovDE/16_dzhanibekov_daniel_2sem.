### Коротко опишите ключевые принципы и объекты грамматики регулярных выражений (15Б)

Регулярные выражения - это мощный инструмент для поиска и манипуляции текстом с помощью 
заданных шаблонов. Они основаны на специальной грамматике, которая включает в себя следующие ключевые элементы:

1. Литералы: Основные текстовые символы, которые ищутся в тексте как есть, без изменений.
2. Метасимволы: Символы с особенными функциями, например:
   - `.` (точка) - соответствует любому одиночному символу, кроме перевода строки.
   - `^` и `$` - начало и конец строки соответственно.
   - `[]` - задают класс символов, например, `[a-z]` соответствует любой строчной букве английского алфавита.
3. **Квантификаторы**: Определяют, сколько раз должен повторяться предшествующий элемент, например:
   - `*` (звездочка) - предшествующий элемент может повторяться 0 или более раз.
   - `+` (плюс) - предшествующий элемент должен повторяться 1 или более раз.
   - `?` (вопросительный знак) - предшествующий элемент может быть, а может и не быть (0 или 1 раз).
   - `{n,m}` - предшествующий элемент должен повторяться от `n` до `m` раз.
4. Группировка: Скобки `()` используются для группировки выражений и захвата подстрок.
5. Альтернации: Вертикальная черта `|` позволяет выбирать между двумя и более альтернативами.
6. Экранирование: Символ обратной косой черты `\` используется для указания, что следующий метасимвол
 следует интерпретировать буквально, или для указания специальных последовательностей, таких как `\d` для цифры.

### Что такое кодировка. Классификации кодировок. Примеры. Достоинства и недостатки. Почему важна 7битная ASCII (10Б)

Кодировка - это система преобразования символов из одного набора в другой, чаще всего из читаемого человеком
текста в машинный код и обратно. Это позволяет компьютерам и другим устройствам сохранять, передавать и отображать текст.

Классификации кодировок:

1. Однобайтовые кодировки: Каждому символу соответствует определенный байт. Примеры: ASCII, ISO 8859-1.
2. Многобайтовые кодировки: Используют более одного байта для представления символа. Примеры: Shift JIS, GB2312.
3. Переменной длины: Используют переменное количество байтов для представления символов. Примеры: UTF-8, UTF-16.

Достоинства и недостатки:

- ASCII: Простота и широкая поддержка, но ограниченный набор символов (только английский алфавит и основные управляющие символы).
- ISO 8859-1: Расширяет ASCII, добавляя символы для западноевропейски